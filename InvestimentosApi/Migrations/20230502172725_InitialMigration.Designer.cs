// <auto-generated />
using InvestimentosApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InvestimentosApi.Migrations
{
    [DbContext(typeof(DatabaseCotext))]
    [Migration("20230502172725_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InvestimentosApi.Models.Acoes", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("MoedaUsada")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeCurto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeLongo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PrecoMercado")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Acoes");
                });

            modelBuilder.Entity("InvestimentosApi.Models.Carteira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AtivoId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ContaId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<string>("TipoAtivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Carteiras");
                });

            modelBuilder.Entity("InvestimentosApi.Models.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("SaldoDisponivel")
                        .HasColumnType("double precision");

                    b.Property<double>("SaldoInvestido")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("InvestimentosApi.Models.Cripto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("MoedaUsada")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeCurto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PrecoMercado")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Criptos");
                });

            modelBuilder.Entity("InvestimentosApi.Models.TesouroDireto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("PrecoMercado")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("TesouroDiretos");
                });
#pragma warning restore 612, 618
        }
    }
}
